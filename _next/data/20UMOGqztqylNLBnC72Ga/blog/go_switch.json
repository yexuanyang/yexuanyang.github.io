{"pageProps":{"article":{"id":"go_switch","contentHtml":"<p>可以使用switch加初始化的方式优雅的进行分支结构的判断，例如</p>\n<pre><code class=\"language-go\">switch result := calculate(){\r\n\tcase result &#x3C; 0:\r\n\t\t...\r\n\tcase result > 0:\r\n\t\t...\r\n\tdefault:\r\n\t\t...\r\n}\n</code></pre>\n<p>或者：</p>\n<pre><code class=\"language-go\">switch a, b := x[i], y[j]; {\r\n\tcase a &#x3C; b: \r\n\t\tt = -1\r\n\tcase a == b: \r\n\t\tt = 0\r\n\tcase a > b: \r\n\t\tt = 1\r\n}\n</code></pre>\n<p>switch 还可以被用于type-switch判断某个interface变量中实际存储的类型</p>\n<p>go的switch默认在case后中断，如果需要继续执行，可以使用语句fallthrough，例如：</p>\n<pre><code class=\"language-go\">package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n\tk := 6\r\n\tswitch k {\r\n\tcase 4:\r\n\t\tfmt.Println(\"was &#x3C;= 4\")\r\n\t\tfallthrough\r\n\tcase 5:\r\n\t\tfmt.Println(\"was &#x3C;= 5\")\r\n\t\tfallthrough\r\n\tcase 6:\r\n\t\tfmt.Println(\"was &#x3C;= 6\")\r\n\t\tfallthrough\r\n\tcase 7:\r\n\t\tfmt.Println(\"was &#x3C;= 7\")\r\n\tcase 8:\r\n\t\tfmt.Println(\"was &#x3C;= 8\")\r\n\t\tfallthrough\r\n\tdefault:\r\n\t\tfmt.Println(\"default case\")\r\n\t}\r\n}\r\n\n</code></pre>\n<p>这一段代码执行case 6和case 7中的语句</p>\n","title":"Go Switch语句使用指南","date":"2023-07-31","category":"GO","tags":["GO"],"summary":"介绍Go语言中switch语句的使用技巧和最佳实践","views":0}},"__N_SSG":true}