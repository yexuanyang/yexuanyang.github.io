{"pageProps":{"article":{"id":"go_pkg_structure","contentHtml":"<h2>包</h2>\n<p>每一个文件都需要属于一个包，每一个程序都要有一个main包，包名必须是小写字母组成；main包里面要有main函数，main函数不能有返回值和参数</p>\n<p>如果编译包名不是main的包，那么生成的是.a文件而不是可执行文件</p>\n<p>属于同一个包的源文件必须同时被编译，因此一个目录下一般存放一个包的源文件</p>\n<p>构建程序必须要按照合理的顺序去编译包</p>\n<p>如果修改了一个包，那么所有引用了这个包的客户端程序都需要重新编译</p>\n<h3>包的依赖</h3>\n<p>采用显式依赖关系</p>\n<p>使用import链接各个包</p>\n<h3>包的导入</h3>\n<p>导入多个包时，按字母顺序导入</p>\n<p>路径问题：</p>\n<ul>\n<li>如果使用/开头，采用绝对路径查找包</li>\n<li>./开头，采用相对路径查找</li>\n<li>没有./或者/开头，在全局文件中查找</li>\n</ul>\n<h3>可见性标识</h3>\n<p>标识符（常量，变量，类型，函数名，结构字段等）以大写字母开头标识对其他包可见，小写字母标识不可见</p>\n<h3>包名冲突</h3>\n<p>包名冲突可以使用别名来解决</p>\n<p><code>import fm \"fmt\"</code>导入fmt包并用fm当作它的别名</p>\n<h2>标准库和标准包</h2>\n<p>标准库的存放位置：</p>\n<ul>\n<li>windows下存放在 <code>pkg/windows_386</code></li>\n<li>linux 32存放在 <code>pkg/linux_386</code>,64存放在 <code>pkg/linux_amd64</code></li>\n</ul>\n<p>标准包的存放位置，一般为：</p>\n<p><code>$GOROOT/pkg/$GOOS_$GOARCH/</code></p>\n","title":"Go语言包结构","date":"2023-07-31","category":"GO","tags":["GO"],"summary":"简要介绍GO语言的包结构","views":0}},"__N_SSG":true}